# Find includes in corresponding build directories
set(CMAKE_INCLUDE_CURRENT_DIR ON)
# Instruct CMake to run moc automatically when needed.
set(CMAKE_AUTOMOC ON)
# Check if environment variable QTDIR is set.
# Extra security for windows environment as well.
if (DEFINED ENV{QTDIR})
    set(CMAKE_PREFIX_PATH $ENV{QTDIR} ${CMAKE_PREFIX_PATH})
else ()
    message (WARNING "WARNING: Environment variable QTDIR is not set. Please locate your Qt folder MY_QT5_DIR.")
endif ()

# Find the QtWidgets library
find_package(Qt5Widgets)

set(SRC_LIST main.cpp )
set(SRC_LIST ${SRC_LIST} Controls/GraphicButtons/kcgraphicbuttonbase.cpp )
set(SRC_LIST ${SRC_LIST} Controls/GraphicButtons/kcgraphicbuttoncancel.cpp )
set(SRC_LIST ${SRC_LIST} Controls/GraphicButtons/kcgraphicbuttonok.cpp )
set(SRC_LIST ${SRC_LIST} Controls/Preference/kcpreferenceitembase.cpp )
set(SRC_LIST ${SRC_LIST} Controls/Preference/kcpreferenceitemboolean.cpp )
set(SRC_LIST ${SRC_LIST} Controls/Preference/kcpreferenceitembooleangroup.cpp )
set(SRC_LIST ${SRC_LIST} Controls/Preference/kcpreferenceitemcombo.cpp )
set(SRC_LIST ${SRC_LIST} Controls/Preference/kcpreferenceitemint.cpp )
set(SRC_LIST ${SRC_LIST} Controls/Preference/kcpreferenceitempath.cpp )
set(SRC_LIST ${SRC_LIST} dbgoutputreceiver.cpp )
set(SRC_LIST ${SRC_LIST} fpc.cpp )
set(SRC_LIST ${SRC_LIST} gcc.cpp )
set(SRC_LIST ${SRC_LIST} gdbcontroller.cpp )
set(SRC_LIST ${SRC_LIST} gdbmivalue.cpp )
set(SRC_LIST ${SRC_LIST} kcclipboard.cpp )
set(SRC_LIST ${SRC_LIST} kccodecompileprogress.cpp)
set(SRC_LIST ${SRC_LIST} kccodeeditor.cpp )
set(SRC_LIST ${SRC_LIST} kccolorconfigure.cpp )
set(SRC_LIST ${SRC_LIST} kccompiledock.cpp )
set(SRC_LIST ${SRC_LIST} kccompileoutputreceiver.cpp )
set(SRC_LIST ${SRC_LIST} kccompilerbase.cpp )
set(SRC_LIST ${SRC_LIST} kccompilerconfigure.cpp )
set(SRC_LIST ${SRC_LIST} kcconfigure.cpp )
set(SRC_LIST ${SRC_LIST} kcconnectionhandler.cpp )
set(SRC_LIST ${SRC_LIST} kccpphighlighter.cpp )
set(SRC_LIST ${SRC_LIST} kcdebugbreakpointmanager.cpp )
set(SRC_LIST ${SRC_LIST} kcdebugcommandio.cpp )
set(SRC_LIST ${SRC_LIST} kcdebugcontrolpanel.cpp )
set(SRC_LIST ${SRC_LIST} kcdebuggerconfigure.cpp )
set(SRC_LIST ${SRC_LIST} kcdebugmarkpanel.cpp)
set(SRC_LIST ${SRC_LIST} kcdebugwatch.cpp )
set(SRC_LIST ${SRC_LIST} kcdocumentrecorder.cpp )
set(SRC_LIST ${SRC_LIST} kcdragproxy.cpp )
set(SRC_LIST ${SRC_LIST} kceditorconfigure.cpp )
set(SRC_LIST ${SRC_LIST} kcexecutor.cpp )
set(SRC_LIST ${SRC_LIST} kcfileassociation.cpp )
set(SRC_LIST ${SRC_LIST} kcfloattoolbar.cpp )
set(SRC_LIST ${SRC_LIST} kcfontconfigure.cpp )
set(SRC_LIST ${SRC_LIST} kcgeneralconfigure.cpp )
set(SRC_LIST ${SRC_LIST} kcglobal.cpp )
set(SRC_LIST ${SRC_LIST} kchighlighter.cpp )
set(SRC_LIST ${SRC_LIST} kchistoryconfigure.cpp )
set(SRC_LIST ${SRC_LIST} kcjudgedock.cpp )
set(SRC_LIST ${SRC_LIST} kclanguageconfigure.cpp )
set(SRC_LIST ${SRC_LIST} kclanguagemode.cpp )
set(SRC_LIST ${SRC_LIST} kclinenumberpanel.cpp )
set(SRC_LIST ${SRC_LIST} kcmailprocessobject.cpp )
set(SRC_LIST ${SRC_LIST} kcmailreports.cpp )
set(SRC_LIST ${SRC_LIST} kcmainmenu.cpp )
set(SRC_LIST ${SRC_LIST} kcmainwindow.cpp )
set(SRC_LIST ${SRC_LIST} kcmessagebox.cpp )
set(SRC_LIST ${SRC_LIST} kcnormalcontentmenu.cpp )
set(SRC_LIST ${SRC_LIST} kcoptionbutton.cpp )
set(SRC_LIST ${SRC_LIST} kcpascalhighlighter.cpp )
set(SRC_LIST ${SRC_LIST} kcplaintextbrowser.cpp )
set(SRC_LIST ${SRC_LIST} kcpreference.cpp )
set(SRC_LIST ${SRC_LIST} kcpreferenceembedded.cpp )
set(SRC_LIST ${SRC_LIST} kcpreferencelangaugelist.cpp )
set(SRC_LIST ${SRC_LIST} kcpreferencepager.cpp )
set(SRC_LIST ${SRC_LIST} kcpreferencesuperlist.cpp )
set(SRC_LIST ${SRC_LIST} kcreplacewindow.cpp )
set(SRC_LIST ${SRC_LIST} kcsearchlinetext.cpp )
set(SRC_LIST ${SRC_LIST} kcsearchwidget.cpp )
set(SRC_LIST ${SRC_LIST} kcsearchwindow.cpp )
set(SRC_LIST ${SRC_LIST} kcsidebar.cpp )
set(SRC_LIST ${SRC_LIST} kcsplashscreen.cpp )
set(SRC_LIST ${SRC_LIST} kcstatusbar.cpp )
set(SRC_LIST ${SRC_LIST} kcstatuscursorinfo.cpp )
set(SRC_LIST ${SRC_LIST} kcstatusrecorder.cpp )
set(SRC_LIST ${SRC_LIST} kcstatusrewriteinfo.cpp )
set(SRC_LIST ${SRC_LIST} kcsubmenu.cpp )
set(SRC_LIST ${SRC_LIST} kctabmanager.cpp )
set(SRC_LIST ${SRC_LIST} kctextblockdata.cpp )
set(SRC_LIST ${SRC_LIST} kctexteditor.cpp )
set(SRC_LIST ${SRC_LIST} kctextpanel.cpp )
set(SRC_LIST ${SRC_LIST} kctextpanelmanager.cpp)
set(SRC_LIST ${SRC_LIST} kctextsearcher.cpp )
set(SRC_LIST ${SRC_LIST} kctitlebar.cpp )
set(SRC_LIST ${SRC_LIST} kcunibodypanel.cpp)
set(SRC_LIST ${SRC_LIST} kcvisiblerecorder.cpp )
set(SRC_LIST ${SRC_LIST} kcwelcomewindow.cpp )
set(SRC_LIST ${SRC_LIST} kreogistcutestyle.cpp )
set(SRC_LIST ${SRC_LIST} mainwindow.cpp)
set(SRC_LIST ${SRC_LIST} textcharformatmap.cpp )

set(RESOURCE_LIST )
qt5_add_resources(RESOURCES_RCC rc.qrc)

set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR})

if(WIN32)
    add_executable(${PROJECT_NAME} WIN32 ${SRC_LIST} ${RESOURCES_RCC})
else(WIN32)
    add_executable(${PROJECT_NAME} ${SRC_LIST} ${RESOURCES_RCC})
endif(WIN32)

# Use the Widgets module from Qt 5.
qt5_use_modules(${PROJECT_NAME} Widgets Network)

configure_file(default.style ${PROJECT_BINARY_DIR}/default.style COPYONLY)
configure_file(DefaultColorConfig.ini ${PROJECT_BINARY_DIR}/DefaultColorConfig.ini COPYONLY)

add_subdirectory(translations)

#install
install(TARGETS ${PROJECT_NAME}
        RUNTIME DESTINATION ${PROJECT_NAME})
install(FILES default.style DefaultColorConfig.ini
        DESTINATION ${PROJECT_NAME})
